#!/bin/bash
# Clean JSON file to remove control characters

if [ $# -ne 1 ]; then
    echo "Usage: $0 <json_file>"
    exit 1
fi

JSON_FILE="$1"

if [ ! -f "$JSON_FILE" ]; then
    echo "Error: File $JSON_FILE not found"
    exit 1
fi

echo "üßπ Cleaning JSON file: $JSON_FILE"

# Create cleaned version using Python
python3 << PYTHON_SCRIPT
import json
import sys

try:
    # Read the file and handle control characters
    with open('$JSON_FILE', 'r', encoding='utf-8', errors='ignore') as f:
        content = f.read()
    
    # Remove control characters except newlines and tabs
    cleaned = ''.join(char for char in content if ord(char) >= 32 or char in '\n\t')
    
    # Try to parse and reformat as valid JSON
    try:
        data = json.loads(cleaned)
        # Write back as clean JSON
        with open('$JSON_FILE', 'w') as f:
            json.dump(data, f, indent=2, ensure_ascii=False)
        print("‚úÖ JSON file cleaned successfully")
    except json.JSONDecodeError as e:
        print(f"‚ùå JSON parsing error: {e}")
        # Just remove control characters and save
        with open('$JSON_FILE', 'w') as f:
            f.write(cleaned)
        print("‚ö†Ô∏è  Control characters removed, but JSON may still be invalid")
        
except Exception as e:
    print(f"‚ùå Error: {e}")
    sys.exit(1)
PYTHON_SCRIPT