#!/bin/bash
set -e

echo "🚀 Auto-setting up Outline development environment..."

# Wait for PostgreSQL and Redis to be ready (they should be started by dinit)
echo "⏳ Waiting for services to be ready..."
for i in {1..60}; do
    if sudo -u postgres pg_isready > /dev/null 2>&1 && redis-cli ping > /dev/null 2>&1; then
        echo "✅ Services are ready!"
        break
    fi
    echo "   Waiting for PostgreSQL and Redis... ($i/60)"
    sleep 2
done


# Check if database is already set up
if sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname = 'outline'" | grep -q 1; then
    echo "📋 Database already exists, checking setup..."
    
    # Test connection
    if PGPASSWORD=outline_password psql -h 127.0.0.1 -U outline -d outline -c "SELECT 1;" > /dev/null 2>&1; then
        echo "✅ Database connection working!"
        
        # Set environment variables
        mkdir -p /home/ubuntu/outline
        cat > /home/ubuntu/outline/.env << "ENVEOF"
NODE_ENV=production
DATABASE_URL="postgres://outline:outline_password@127.0.0.1:5432/outline"
REDIS_URL="redis://127.0.0.1:6379"
SECRET_KEY="development-secret-key-change-in-production"
UTILS_SECRET="development-utils-secret-change-in-production"
URL="http://localhost:3000"
FORCE_HTTPS=false
FILE_STORAGE=local
FILE_STORAGE_LOCAL_ROOT_DIR=/var/lib/outline/data
DEBUG="cache,presenters,events"
LOG_LEVEL=debug

# Enable Email Authentication
ENABLED_PLUGINS=email
SMTP_HOST=127.0.0.1
SMTP_PORT=1025
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@outline.local
SMTP_REPLY_EMAIL=support@outline.local
SMTP_SECURE=false
ENVEOF

        # Create production environment file
        cat > /home/ubuntu/outline/.env.production << "PRODENVEOF"
NODE_ENV=production
DATABASE_URL="postgres://outline:outline_password@127.0.0.1:5432/outline"
REDIS_URL="redis://127.0.0.1:6379"
SECRET_KEY="production-secret-key-change-this-in-real-production"
UTILS_SECRET="production-utils-secret-change-this-in-real-production"
URL="http://localhost:3000"
FORCE_HTTPS=false
FILE_STORAGE=local
FILE_STORAGE_LOCAL_ROOT_DIR=/var/lib/outline/data
LOG_LEVEL=info

# Enable Email Authentication
ENABLED_PLUGINS=email
SMTP_HOST=127.0.0.1
SMTP_PORT=1025
SMTP_USERNAME=production@example.com
SMTP_PASSWORD=change-this-password
SMTP_FROM_EMAIL=noreply@outline.local
SMTP_REPLY_EMAIL=support@outline.local
SMTP_SECURE=true
PRODENVEOF

	# Set up test database if it doesn't exist
	sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname = 'outline-test'" | grep -q 1 || {
	    echo "   Creating outline-test database..."
	    sudo -u postgres createdb outline-test
	    sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE \"outline-test\" TO outline;"
	    sudo -u postgres psql -d outline-test -c "
	    GRANT ALL ON SCHEMA public TO outline;
	    GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO outline;
	    GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO outline;
	    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO outline;
	    ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO outline;
	    " > /dev/null 2>&1
	}
	
	cat > /home/ubuntu/outline/.env.test << "ENVEOF"
NODE_ENV=test
DATABASE_URL=postgres://outline:outline_password@127.0.0.1:5432/outline-test
SECRET_KEY=F0E5AD933D7F6FD8F4DBB3E038C501C052DC0593C686D21ACB30AE205D2F634B

SMTP_HOST=127.0.0.1
SMTP_USERNAME=test
SMTP_FROM_EMAIL=hello@example.com
SMTP_REPLY_EMAIL=hello@example.com

GOOGLE_CLIENT_ID=123
GOOGLE_CLIENT_SECRET=123

SLACK_CLIENT_ID=123
SLACK_CLIENT_SECRET=123

GITHUB_CLIENT_ID=123;
GITHUB_CLIENT_SECRET=123;
GITHUB_APP_NAME=outline-test;

IFRAMELY_API_KEY=123

RATE_LIMITER_ENABLED=false

FILE_STORAGE=local
FILE_STORAGE_LOCAL_ROOT_DIR=/tmp
ENVEOF

	# Always create backup of .env.test
	cp /home/ubuntu/outline/.env.test /home/ubuntu/outline/.env.test.backup	
        echo "🎉 Outline development environment is ready!"
        echo "📝 Environment variables saved to /home/ubuntu/outline/.env"
        exit 0
    fi
fi

echo "🔧 Setting up Outline database..."

# Create outline user if it doesn't exist (needed for yarn db:create)
sudo -u postgres psql -tc "SELECT 1 FROM pg_user WHERE usename = 'outline'" | grep -q 1 || {
    echo "   Creating outline user..."
    sudo -u postgres psql -c "CREATE USER outline WITH PASSWORD 'outline_password';"
}

echo "   Granting user privileges..."
sudo -u postgres psql -c "ALTER USER outline CREATEDB;"

# Set environment variables first (needed for yarn db:create)
echo "🌍 Setting environment variables..."
mkdir -p /home/ubuntu/outline
cat > /home/ubuntu/outline/.env << "ENVEOF"
NODE_ENV=production
DATABASE_URL="postgres://outline:outline_password@127.0.0.1:5432/outline"
REDIS_URL="redis://127.0.0.1:6379"
SECRET_KEY="development-secret-key-change-in-production"
UTILS_SECRET="development-utils-secret-change-in-production"
URL="http://localhost:3000"
FORCE_HTTPS=false
FILE_STORAGE=local
FILE_STORAGE_LOCAL_ROOT_DIR=/var/lib/outline/data
DEBUG="cache,presenters,events"
LOG_LEVEL=debug

# Enable Email Authentication
ENABLED_PLUGINS=email
SMTP_HOST=127.0.0.1
SMTP_PORT=1025
SMTP_USERNAME=
SMTP_PASSWORD=
SMTP_FROM_EMAIL=noreply@outline.local
SMTP_REPLY_EMAIL=support@outline.local
SMTP_SECURE=false
ENVEOF

# Create database using yarn db:create
echo "   Creating database with yarn db:create..."
cd /home/ubuntu/outline
NODE_ENV=production DATABASE_URL="postgres://outline:outline_password@127.0.0.1:5432/outline" yarn db:create --env=production-ssl-disabled

echo "   Granting additional privileges..."
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE outline TO outline;"
sudo -u postgres psql -c "ALTER DATABASE outline OWNER TO outline;"
sudo -u postgres psql -d outline -c "
GRANT ALL ON SCHEMA public TO outline;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO outline;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO outline;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO outline;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO outline;
" > /dev/null 2>&1

# Create production environment file
cat > /home/ubuntu/outline/.env.production << "PRODENVEOF"
NODE_ENV=production
DATABASE_URL="postgres://outline:outline_password@127.0.0.1:5432/outline"
REDIS_URL="redis://127.0.0.1:6379"
SECRET_KEY="production-secret-key-change-this-in-real-production"
UTILS_SECRET="production-utils-secret-change-this-in-real-production"
URL="http://localhost:3000"
FORCE_HTTPS=false
FILE_STORAGE=local
FILE_STORAGE_LOCAL_ROOT_DIR=/var/lib/outline/data
LOG_LEVEL=info

# Enable Email Authentication
ENABLED_PLUGINS=email
SMTP_HOST=127.0.0.1
SMTP_PORT=1025
SMTP_USERNAME=production@example.com
SMTP_PASSWORD=change-this-password
SMTP_FROM_EMAIL=noreply@outline.local
SMTP_REPLY_EMAIL=support@outline.local
SMTP_SECURE=true
PRODENVEOF

# Set up test database and environment
echo "🧪 Setting up test database..."
sudo -u postgres psql -tc "SELECT 1 FROM pg_database WHERE datname = 'outline-test'" | grep -q 1 || {
    echo "   Creating outline-test database..."
    sudo -u postgres createdb outline-test
}

echo "   Granting test database privileges..."
sudo -u postgres psql -c "GRANT ALL PRIVILEGES ON DATABASE \"outline-test\" TO outline;"
sudo -u postgres psql -d outline-test -c "
GRANT ALL ON SCHEMA public TO outline;
GRANT ALL PRIVILEGES ON ALL TABLES IN SCHEMA public TO outline;
GRANT ALL PRIVILEGES ON ALL SEQUENCES IN SCHEMA public TO outline;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON TABLES TO outline;
ALTER DEFAULT PRIVILEGES IN SCHEMA public GRANT ALL ON SEQUENCES TO outline;
" > /dev/null 2>&1

echo "🧪 Creating test environment configuration..."
cat > /home/ubuntu/outline/.env.test << "ENVEOF"
NODE_ENV=test
DATABASE_URL=postgres://outline:outline_password@127.0.0.1:5432/outline-test
SECRET_KEY=F0E5AD933D7F6FD8F4DBB3E038C501C052DC0593C686D21ACB30AE205D2F634B

SMTP_HOST=127.0.0.1
SMTP_USERNAME=test
SMTP_FROM_EMAIL=hello@example.com
SMTP_REPLY_EMAIL=hello@example.com

GOOGLE_CLIENT_ID=123
GOOGLE_CLIENT_SECRET=123

SLACK_CLIENT_ID=123
SLACK_CLIENT_SECRET=123

GITHUB_CLIENT_ID=123;
GITHUB_CLIENT_SECRET=123;
GITHUB_APP_NAME=outline-test;

IFRAMELY_API_KEY=123

RATE_LIMITER_ENABLED=false

FILE_STORAGE=local
FILE_STORAGE_LOCAL_ROOT_DIR=/tmp
ENVEOF

# Always create backup of .env.test
cp /home/ubuntu/outline/.env.test /home/ubuntu/outline/.env.test.backup

# Test database connection
echo "🔍 Testing database connection..."
if PGPASSWORD=outline_password psql -h 127.0.0.1 -U outline -d outline -c "SELECT version();" > /dev/null 2>&1; then
    echo "✅ Database connection successful!"
else
    echo "❌ Database connection failed!"
    exit 1
fi

echo ""
echo "🎉 Outline development environment setup complete!"
echo ""
echo "📋 Ready for development:"
echo "   cd /home/ubuntu/outline"
echo "   yarn build          # Build the project"
echo "   yarn db:migrate     # Run database migrations"
echo "   yarn dev:watch      # Start development server"
echo ""
echo "🧪 Ready for testing:"
echo "   yarn test:server    # Run server tests"
echo "   yarn test:app       # Run app tests"
echo "   yarn test           # Run all tests"
echo ""
echo "🌐 Access Outline at: http://localhost:3000"
echo "🖥️  VNC Desktop at: http://localhost:6080/vnc.html"
