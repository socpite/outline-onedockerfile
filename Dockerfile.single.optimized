# syntax=docker/dockerfile:1
# Ultra-fast single container Dockerfile for Outline + PostgreSQL + Redis + X11/VNC

FROM node:20-slim AS base

# Install system packages (this layer should be cached)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl wget ca-certificates sudo bash git \
    postgresql postgresql-client redis-server nginx \
    xvfb x11vnc websockify python3-websockify novnc \
    scrot imagemagick tigervnc-common xdotool x11-utils \
    xfce4 xfce4-terminal firefox-esr dbus-x11 \
    xfce4-goodies xfce4-settings at-spi2-core \
    && rm -rf /var/lib/apt/lists/*

# Install dinit (this layer should be cached)
RUN wget -O /tmp/dinit.tar.gz https://github.com/davmac314/dinit/archive/refs/tags/v0.19.4.tar.gz && \
    cd /tmp && tar xzf dinit.tar.gz && cd dinit-* && \
    apt-get update && apt-get install -y --no-install-recommends g++ make m4 && \
    make && make install && \
    apt-get remove -y g++ make m4 && apt-get autoremove -y && \
    rm -rf /var/lib/apt/lists/* /tmp/dinit*

FROM base AS runtime

# Create users and directories (this layer should be cached)
RUN adduser --disabled-password --gecos "" outline && \
    adduser outline sudo && \
    echo "outline ALL=(ALL) NOPASSWD:ALL" >> /etc/sudoers && \
    mkdir -p /opt/outline /var/lib/outline/data /var/log/outline \
    /var/lib/postgresql/main /var/log/postgresql /run/postgresql \
    /var/lib/redis /var/log/redis \
    /home/outline/screenshots /home/outline/.vnc \
    /home/outline/.config/xfce4 /home/outline/.cache \
    /var/log/dinit /etc/dinit.d /etc/dinit.d/boot.d && \
    chown -R postgres:postgres /var/lib/postgresql /var/log/postgresql /run/postgresql && \
    chown -R redis:redis /var/lib/redis /var/log/redis && \
    chown -R outline:outline /opt/outline /var/lib/outline /var/log/outline /home/outline

# Create runtime directories for XFCE (this layer should be cached)
RUN OUTLINE_UID=$(id -u outline) && \
    mkdir -p /run/user && \
    chmod 755 /run/user && \
    mkdir -p /run/user/$OUTLINE_UID && \
    chown outline:outline /run/user/$OUTLINE_UID && \
    mkdir -p /tmp/.ICE-unix && \
    chmod 1777 /tmp/.ICE-unix

# Clone Outline source and install dependencies (this layer changes when repo updates)
WORKDIR /opt/outline
RUN git clone https://github.com/outline/outline.git . && \
    chown -R outline:outline . && \
    sudo -u outline yarn install --frozen-lockfile

# Copy configuration files (these layers change when we modify scripts/config)
COPY dinit.d/ /etc/dinit.d/
COPY nginx.conf /etc/nginx/sites-available/default
COPY scripts/ /usr/local/bin/

# Make scripts executable
RUN chmod +x /usr/local/bin/*

# Environment
ENV NODE_ENV=development \
    DISPLAY=:1 \
    DEBIAN_FRONTEND=noninteractive \
    XDG_CURRENT_DESKTOP=XFCE \
    XDG_SESSION_DESKTOP=xfce \
    XDG_SESSION_TYPE=x11

# Expose ports
EXPOSE 80 3000 5900 6080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD curl -f http://localhost:3000/_health || exit 1

# Start dinit
CMD ["/usr/sbin/dinit", "--container", "-d", "/etc/dinit.d/"]